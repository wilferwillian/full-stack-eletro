[{"C:\\xampp\\htdocs\\full_stack_eletro\\src\\rotas.js":"1","C:\\xampp\\htdocs\\full_stack_eletro\\src\\paginas\\produtos.js":"2","C:\\xampp\\htdocs\\full_stack_eletro\\src\\index.js":"3","C:\\xampp\\htdocs\\full_stack_eletro\\src\\paginas\\contato.js":"4","C:\\xampp\\htdocs\\full_stack_eletro\\src\\components\\index.js":"5"},{"size":641,"mtime":1607227512098,"results":"6","hashOfConfig":"7"},{"size":2050,"mtime":1607225592791,"results":"8","hashOfConfig":"7"},{"size":206,"mtime":1607116806526,"results":"9","hashOfConfig":"7"},{"size":3472,"mtime":1607206473557,"results":"10","hashOfConfig":"7"},{"size":1238,"mtime":1607227566659,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"15dnfxs",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\full_stack_eletro\\src\\rotas.js",["24","25"],"import {Switch,Route} from 'react-router-dom';\r\nimport {Router}  from 'react-router-dom';\r\nimport Home from './paginas/index'\r\nimport Contato from './paginas/contato'\r\nimport Lojas from './paginas/nossas lojas'\r\nimport Produtos from './paginas/produtos'\r\n\r\nfunction Rotas(){\r\n    return(\r\n        <Switch>\r\n            <Route exact path=\"/\"component={ Home }/>\r\n            <Route exact path=\"/contato\"component={Contato}/>\r\n            <Route exact path=\"/lojas\"component={Lojas}/>\r\n            <Route exact path=\"/produtos\"component={Produtos}/>\r\n            \r\n           \r\n            \r\n        </Switch>\r\n    )\r\n};\r\nexport default Rotas;","C:\\xampp\\htdocs\\full_stack_eletro\\src\\paginas\\produtos.js",["26","27"],"import React, {useState, useEffect} from 'react';\r\n\r\nconst Produtos = () => {\r\n\r\n        const [produ, setProdu] = useState([]);\r\n\r\n        useEffect(async () => {\r\n            const url =\"http://localhost/full_stack_eletro/Back-End/Backend/Api.php\"\r\n            const resp = await fetch(url);\r\n            setProdu(await resp.json()); \r\n        }, [])\r\n\r\n      \r\n        \r\n        return(\r\n            <>\r\n            <section className=\"container mx-auto mt-5 produtos row justify-content-center bg-info\">\r\n                {\r\n                    \r\n                    produ.map(row => {\r\n                            return(\r\n                            <div className=\"col-3 my-2 bg-danger\">\r\n\r\n                                <div key={row.idproduct} className=\"box_produto card border border-success border-2\" style={{width:\"12rem\"}} id={row.categoria}>\r\n                                    <img className=\"card-img-top\" src={row.imagen} alt=\"imagem\" img-fluid/>\r\n                                    <br />\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\">{row.descripcao}</p>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div>\r\n                                        <p className=\"card-text\" style={{textDecoration: \"line-though\"}}>R${row.preco}</p>\r\n                                    </div>\r\n                                    <div>\r\n                                        <p className=\"card-text\"> R${row.precoFinal} </p>\r\n                                    </div>\r\n                                    <a className=\"btn btn-dark\" role=\"button\">Comprar</a>\r\n                                </div>\r\n                                \r\n                             </div>    \r\n                            )\r\n                        }\r\n                   \r\n                    )\r\n                }\r\n            </section>\r\n            </>\r\n        );\r\n}\r\n\r\nexport default Produtos;","C:\\xampp\\htdocs\\full_stack_eletro\\src\\index.js",[],"C:\\xampp\\htdocs\\full_stack_eletro\\src\\paginas\\contato.js",["28","29","30"],"C:\\xampp\\htdocs\\full_stack_eletro\\src\\components\\index.js",[],{"ruleId":"31","severity":1,"message":"32","line":2,"column":9,"nodeType":"33","messageId":"34","endLine":2,"endColumn":15},{"ruleId":"31","severity":1,"message":"35","line":7,"column":8,"nodeType":"33","messageId":"34","endLine":7,"endColumn":15},{"ruleId":"36","severity":1,"message":"37","line":7,"column":19,"nodeType":"38","endLine":11,"endColumn":10},{"ruleId":"39","severity":1,"message":"40","line":37,"column":37,"nodeType":"41","endLine":37,"endColumn":79},{"ruleId":"36","severity":1,"message":"37","line":12,"column":15,"nodeType":"38","endLine":16,"endColumn":6},{"ruleId":"42","severity":1,"message":"43","line":47,"column":17,"nodeType":"41","endLine":47,"endColumn":36},{"ruleId":"42","severity":1,"message":"43","line":51,"column":17,"nodeType":"41","endLine":51,"endColumn":39},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Pedidos' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]